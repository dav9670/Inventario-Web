<?php
namespace App\Test\TestCase\Controller;

use App\Controller\LicencesController;
use Cake\TestSuite\IntegrationTestTrait;
use Cake\TestSuite\TestCase;
use Cake\ORM\TableRegistry;

/**
 * App\Controller\LicencesController Test Case
 */
class LicencesControllerTest extends TestCase
{
    use IntegrationTestTrait;

    /**
     * Fixtures
     *
     * @var array
     */
    public $fixtures = [
        'app.Licences',
        'app.Products',
        'app.LicencesProducts',
        'app.Loans'
    ];

    public function setUp()
    {
        parent::setUp();

        $this->enableCsrfToken();
        $this->enableSecurityToken();

        // Set session data
        $this->session([
            'Auth' => [
                'User' => [
                    'id' => 1,
                    'name' => 'david@gmail.com',
                    'password' => '$2y$10$Cx3OagaMhBWn64l.MiHpRu36oBdp7J3GCg/cjHpKfTY8CVBxWzloy',
                    'admin_status' => 'admin'
                ]
            ]
        ]);
    }

    /**
     * Test search method
     *
     * @return void
     */
    public function testSearch()
    {
        //Positive test

        $licencesTable = TableRegistry::get('Licences');
        $expectedLicences = $licencesTable->find('all')
            ->where('id = 4 or id = 5')
            ->order(['name' => 'asc'])
            ->toList();

        $this->get('/licences/search.json?keyword=win&sort_field=name&sort_dir=asc&filters[search_available]=true&filters[search_unavailable]=true&filters[search_licences]=true&filters[search_products]=false');

        $receivedLicencesDecoded = json_decode((string)$this->_response->getBody());
        $receivedLicences = [];

        foreach($receivedLicencesDecoded->licences as $licence){
            array_push($receivedLicences, $licencesTable->get($licence->id));
        }

        foreach($receivedLicencesDecoded->archivedLicences as $licence){
            array_push($receivedLicences, $licencesTable->get($licence->id));
        }

        $this->assertEquals($expectedLicences, $receivedLicences);

        //Negative test
        $licencesTable = TableRegistry::get('Licences');

        $this->get('/licences/search.json?keyword=zzzzzzzzzzzzzzzzz&sort_field=name&sort_dir=asc');

        $receivedLicencesDecoded = json_decode((string)$this->_response->getBody());

        $this->assertCount(0, $receivedLicencesDecoded->licences);
    }

    /**
     * Test add method
     *
     * @return void
     */
    public function testAdd()
    {
        $this->get('/licences/add');
        $this->assertResponseOk();

        //-------------------------------------------------------------------------

        $imageData = '';

        $imageData = base64_decode($imageData);

        file_put_contents('/tmp/imageTest.jpg', $imageData);

        $post = [
            'name' => 'office 1',
            'key_text' => 'EARBL-O6CPC-6IT7N-HKTY2-59BDD',
            'description' => 'test description',
            'image' => [
                'tmp_name' => '/tmp/imageTest.jpg',
			    'error' => (int) 0,
			    'name' => 'imageTest.jpg',
			    'type' => 'image/jpeg',
			    'size' => (int) 31304
            ],
            'start_time' => '2018-12-17 12:00:00',
            'end_time' => '2022-12-17 12:00:00',
            'products' => [
                '_ids' => [
                    '1',
                    '2'
                ]
            ]
        ];

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['name' => 'office 1'])->first();
        $this->assertNull($licence);

        $this->post('/licences/add', $post);

        //var_dump($this->_response);

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['name' => 'office 1'])->first();
        $this->assertNotNull($licence);


        //Negative test (name already exists)
        /*file_put_contents('/tmp/imageTest.jpg', $imageData);

        $post = [
            'name' => 'Office 365 (Win 10)',
            'key_text' => 'EARBL-O6CPC-6IT7N-HKTY2-59BDD',
            'description' => 'test2 description',
            'image' => [
                'tmp_name' => '/tmp/imageTest.jpg',
			    'error' => (int) 0,
			    'name' => 'imageTest.jpg',
			    'type' => 'image/jpeg',
			    'size' => (int) 31304
            ],
            'start_time' => '2018-17-12 12:00:00',
            'end_time' => '2022-17-12 12:00:00',
            'products' => [
                '_ids' => [
                    '1',
                    '2'
                ]
            ]
        ];

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['description' => 'test2 description'])->first();
        $this->assertNull($licence);

        $this->post('/licences/add', $post);

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['description' => 'test2 description'])->first();
        $this->assertNull($licence);
    }

    /**
     * Test consult method
     *
     * @return void
     */
    public function testConsult()
    {
        //Positive test
        $post = [
            'id' => 1,
            'name' => 'office 2',
            'description' => 'The science of memes.'
        ];

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['id' => 1])->first();
        $this->assertNotNull($licence);
        $this->assertEquals('Office 365 (Mac)', $licence->name);
        $this->assertEquals('Microsoft Office Suite for Mac.', $licence->description);

        $this->post('/licences/1', $post);

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['id' => 1])->first();
        $this->assertNotNull($licence);
        $this->assertEquals('office 2', $licence->name);
        $this->assertEquals('The science of memes.', $licence->description);


        //Negative test
        $post = [
            'id' => 2,
            'name' => '',
            'description' => 'Name is empty'
        ];

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['id' => 2])->first();
        $this->assertNotNull($licence);
        $this->assertEquals('Office 365 (Mac)', $licence->name);
        $this->assertEquals('Microsoft Office Suite for Mac.', $licence->description);

        $this->post('/licences/2', $post);

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['id' => 2])->first();
        $this->assertNotNull($licence);
        $this->assertEquals('Office 365 (Mac)', $licence->name);
        $this->assertEquals('Microsoft Office Suite for Mac.', $licence->description);
    }

    /**
     * Test delete method
     *
     * @return void
     */
    public function testDelete()
    {
        //Positive test
        $post = [
            'id' => 1
        ];

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['id' => 1])->first();
        $this->assertNotNull($licence);

        $this->post('/licences/delete/1', $post);

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['id' => 1])->first();
        $this->assertNull($licence);


        //Negative test
        $post = [
            'id' => -1
        ];

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['id' => -1])->first();
        $this->assertNull($licence);

        $this->post('/licences/delete/-1', $post);

        $licences = TableRegistry::get('Licences');
        $licence = $licences->find()->where(['id' => -1])->first();
        $this->assertNull($licence);

        $this->assertResponseError();
    }
}
